# This workflow is a test. It creates a Github issue each time an issue is closed.
# It uses the `gh` client with a dedicated Access Token with read/write issues permissions.

name: Assign Project & column to new issue
on:
  # Ref: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issues
  issues:
    # opened = created, edited = title or body were edited
    types: [opened,edited]
  # # We also want to be able to run this workflow manually from Github
  # workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_PROJECT: embergershared/2

jobs:
  move-assigned-card:
    name: Get issue details
    runs-on: ubuntu-latest
    # runs-on:
    #   # We use a GH organization Self-hosted runner wired in the Private VNET
    #   group: embergershared
    #   labels: 912772
    steps:
      # For 'gh' to work, we need to operate in a git repo
      - name: Checkout
        uses: actions/checkout@v3

      - name: List issues
        run: |
          echo "List issues:"
          gh issue list
  
      - name: Show edited issue
        run: |
          echo "Show edited issue:"
          gh issue view ${{ github.event.issue.number }}
          echo "Get issues already in our project"
          IN_PROJ_ISSUES=$(gh issue list -S "project:${{ env.GH_PROJECT }}" --json number --jq .[].number)
          if [[ $IN_PROJ_ISSUES =~ ${{ github.event.issue.number }} ]]; then
            echo "Issue is already in the project"
          else
            echo "Adding issue to project"
          fi
